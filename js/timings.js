const bibTimings = `
05001,00:27:03
05002,00:32:22
05003,00:25:13
05004,00:21:59
05005,00:18:42
05006,00:22:31
05007,00:41:22
05008,00:31:08
05009,00:29:01
05010,00:30:38
05011,00:21:12
05012,00:25:03
05013,00:26:21
05014,00:23:13
05015,00:21:34
05016,00:17:21
05017,00:16:29
05018,00:17:23
05019,00:40:53
05021,00:26:52
05022,00:22:19
05023,00:21:15
05024,00:20:21
05025,00:30:59
05026,00:20:27
05027,00:20:22
05028,00:24:50
05029,00:24:52
05030,00:26:06
05031,00:26:08
05032,00:20:26
05033,00:26:51
05038,00:44:43
05039,00:28:38
05040,00:28:38
21002,01:13:11
21003,03:27:15
21004,03:27:38
21005,01:51:29
21006,01:51:24
21007,01:35:43
21008,01:34:34
21009,01:22:52
21010,01:53:49
21011,01:28:01
21012,01:12:28
21014,01:53:48
21015,01:53:47
21016,01:30:18
21017,01:17:30
21018,01:27:55
21020,01:29:48
21021,02:12:15
21022,02:21:01
21023,01:37:25
21024,01:21:52
21025,01:30:57
21026,01:29:31
21027,02:14:27
21028,02:14:24
21029,02:14:26
21030,01:24:32
21031,02:27:21
21032,02:27:20
21033,02:27:22
21034,02:05:48
21035,02:13:06
21036,01:10:37
21037,01:26:28
21044,01:10:34
21046,01:10:40
21047,01:10:59
21048,01:08:40
21049,01:39:15
21050,01:02:10
21051,02:13:08
21052,01:39:16
42001,03:00:29
42002,01:39:34
42003,01:41:35
42004,02:03:46
42005,03:38:38
42007,02:00:22
42008,01:40:34
42009,03:14:45
42010,03:08:08
42011,03:31:39
42012,02:56:02
42013,02:12:19
42014,02:15:47
42015,01:42:35
42017,02:40:14
42018,02:01:14
42019,01:34:32
42020,02:11:11
42021,02:00:51
42022,02:11:46
42023,02:07:50
42024,02:19:19
42025,02:19:21
42026,03:01:27
42028,01:51:50
42029,01:51:59
42030,02:30:03
42031,02:28:54
42032,03:05:38
42033,02:39:21
42034,02:39:21
42035,02:04:04
42036,02:16:54
42038,02:45:01
42039,02:31:12
42040,01:29:34
42042,03:32:36
42043,01:46:41
42046,03:54:01
42048,04:51:21
42049,01:46:39
42053,04:51:22
42054,04:51:23`;

function parseCsv(data) {
    const lines = data.trim().split("\n");
    let result = {};

    for (i = 0; i < lines.length; i++) {
        const line = lines[i].trim().split(",");
        result[line[0]] = line[1];
    }

    return result;
}

const bibDict = parseCsv(bibTimings);

document.getElementById('search-btn').addEventListener('click', searchFunction);
document.getElementById('search-input').addEventListener('keydown', function(event) {
    if (event.key === 'Enter') {
        searchFunction();
    }
});

function searchFunction() {
    let query = document.getElementById('search-input').value.toLowerCase();
    let resultsContainer = document.getElementById('countdown-container');

    let timing = null;
    for (let bib in bibDict) {
        if (bibDict.hasOwnProperty(bib) && query.includes(bib)) {
            timing = bibDict[bib];
            break;
        }
    }

    if (timing) {
        resultsContainer.innerText = timing;
    } else {
        resultsContainer.innerText = 'Bib Not Found!';
    }
}

